// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  role      String  @default("employee")
  ownedProject  Project[]
  teamMemberships TeamMembership[]
}

model Project {
  id           String    @id @default(uuid())
  ownerId      String
  name         String
  description  String?
  startDate    DateTime
  endDate      DateTime
  status       Status
  tasks        Task[]
  owner        User      @relation(fields: [ownerId], references: [id])
  teamId       String?   @unique
  team         Team?     @relation(fields: [teamId], references: [id])
}

model Team {
  id             String           @id @default(uuid())
  name           String
  memberships    TeamMembership[]
  projects       Project[]
}

model TeamMembership {
  id        String    @id @default(uuid())
  userId    String
  teamId    String
  role      String    @default("employee")

  user      User      @relation(fields: [userId], references: [id])
  team      Team      @relation(fields: [teamId], references: [id])

  @@unique([userId, teamId])
}

model Task {
  id          String    @id @default(uuid())
  projectId   String
  description String
  dueDate     DateTime
  status      Status
  note        String?

  project     Project  @relation(fields: [projectId], references: [id])
}

enum Status {
  ToDo
  InProgress
  Done
  Failed
}
